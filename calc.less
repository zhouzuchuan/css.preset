

// 默认纯色
each(@defaultColors, .(@v, @k, @i) {  
    @prefixIdx: (@i - 1);
    .cor-@{prefixIdx} {
        color: @v !important;
    }
});

// 字号
each(range(0, @fontSizeLength), .(@v, @k) {  
    .fz-@{v} {
        font-size: (@v * @baseFontSizeDiff) !important;
    }
});

// 行高
each(range(0, @lineHeightLength), .(@v, @k) {  
    .lh-@{v} {
        line-height: (@v * @baseLineHeightDiff) !important;
    }
});

// 字重
each(range(1, @fontWeightLength), .(@v, @k) {  
    .fw-@{v} {
        font-weight: (@v * @baseFontWeightDiff) !important;
    }
});

// flex
each(range(0, @flexLength), .(@v, @k) {  
    .flex-@{v} {
        flex: @v !important;
        min-width: 0;
    }
});

@spacingMap: {
    ma: margin;
    mx: margin-left, margin-right;
    my: margin-top, margin-bottom;
    mt: margin-top;
    mr: margin-right;
    mb: margin-bottom;
    ml: margin-left;
    pa: padding;
    px: padding-left, padding-right;
    py: padding-top, padding-bottom;
    pt: padding-top;
    pr: padding-right;
    pb: padding-bottom;
    pl: padding-left;
};

// 负数间距
@spacingMap-: {
    mt: margin-top;
    mr: margin-right;
    mb: margin-bottom;
    ml: margin-left;
};

// .sortLoop(@dataMap, @negative: false) {
//     each(@dataMap, .(@name, @sortname, @i) {  
//         each(range(0, @spacingLength), .(@n) {
//             @temp: if(@negative, -@sortname, @sortname);
//             .@{temp}-@{n} {
//                 each(range(1, length(@name)), .(@v, @k, @i) {  
//                     @key: extract(@name, @i);
//                     @{key}: (if(@negative, -1, 1) * (@n * @baseSpacingDiff)) !important;
//                 });
//             } 
//         });
//     });
// }

.sortLoop(@dataMap ) {
    each(@dataMap, .(@name, @sortname, @i) {  
        each(range(0, @spacingLength), .(@n) { 
            .@{sortname}-@{n} {
                each(range(1, length(@name)), .(@v, @k, @i) {  
                    @key: extract(@name, @i);
                    @{key}: (1 * (@n * @baseSpacingDiff)) !important;
                });
            } 
        });
    });
}

.sortLoop2(@dataMap ) {
    each(@dataMap, .(@name, @sortname, @i) {  
        each(range(0, @spacingLength), .(@n) { 
            .-@{sortname}-@{n} {
                each(range(1, length(@name)), .(@v, @k, @i) {  
                    @key: extract(@name, @i);
                    @{key}: (-1 * (@n * @baseSpacingDiff)) !important;
                });
            } 
        });
    });
}

.sortLoop(@spacingMap);
.sortLoop2(@spacingMap-);

.mx-auto {
    margin-right: auto;
    margin-left: auto;
}

// 多行隐藏
each(range(1, 5, 1), .(@v) {  
    .clamp-@{v} {
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: @v;
        -moz-box-orient: vertical;
        -moz-line-clamp: @v;
        text-overflow: ellipsis;
    }
});
